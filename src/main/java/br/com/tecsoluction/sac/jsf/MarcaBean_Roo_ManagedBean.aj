// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package br.com.tecsoluction.sac.jsf;

import br.com.tecsoluction.sac.Marca;
import br.com.tecsoluction.sac.jsf.MarcaBean;
import br.com.tecsoluction.sac.jsf.util.MessageFactory;
import java.util.ArrayList;
import java.util.List;
import javax.annotation.PostConstruct;
import javax.el.ELContext;
import javax.el.ExpressionFactory;
import javax.faces.application.FacesMessage;
import javax.faces.bean.ManagedBean;
import javax.faces.bean.SessionScoped;
import javax.faces.component.html.HtmlOutputText;
import javax.faces.component.html.HtmlPanelGrid;
import javax.faces.context.FacesContext;
import org.primefaces.component.inputtext.InputText;
import org.primefaces.component.message.Message;
import org.primefaces.component.outputlabel.OutputLabel;
import org.primefaces.context.RequestContext;
import org.primefaces.event.CloseEvent;

privileged aspect MarcaBean_Roo_ManagedBean {
    
    declare @type: MarcaBean: @ManagedBean(name = "marcaBean");
    
    declare @type: MarcaBean: @SessionScoped;
    
    private String MarcaBean.name = "Marcas";
    
    private Marca MarcaBean.marca;
    
    private List<Marca> MarcaBean.allMarcas;
    
    private boolean MarcaBean.dataVisible = false;
    
    private List<String> MarcaBean.columns;
    
    private HtmlPanelGrid MarcaBean.createPanelGrid;
    
    private HtmlPanelGrid MarcaBean.editPanelGrid;
    
    private HtmlPanelGrid MarcaBean.viewPanelGrid;
    
    private boolean MarcaBean.createDialogVisible = false;
    
    @PostConstruct
    public void MarcaBean.init() {
        columns = new ArrayList<String>();
        columns.add("nome");
    }
    
    public String MarcaBean.getName() {
        return name;
    }
    
    public List<String> MarcaBean.getColumns() {
        return columns;
    }
    
    public List<Marca> MarcaBean.getAllMarcas() {
        return allMarcas;
    }
    
    public void MarcaBean.setAllMarcas(List<Marca> allMarcas) {
        this.allMarcas = allMarcas;
    }
    
    public String MarcaBean.findAllMarcas() {
        allMarcas = Marca.findAllMarcas();
        dataVisible = !allMarcas.isEmpty();
        return null;
    }
    
    public boolean MarcaBean.isDataVisible() {
        return dataVisible;
    }
    
    public void MarcaBean.setDataVisible(boolean dataVisible) {
        this.dataVisible = dataVisible;
    }
    
    public HtmlPanelGrid MarcaBean.getCreatePanelGrid() {
        if (createPanelGrid == null) {
            createPanelGrid = populateCreatePanel();
        }
        return createPanelGrid;
    }
    
    public void MarcaBean.setCreatePanelGrid(HtmlPanelGrid createPanelGrid) {
        this.createPanelGrid = createPanelGrid;
    }
    
    public HtmlPanelGrid MarcaBean.getEditPanelGrid() {
        if (editPanelGrid == null) {
            editPanelGrid = populateEditPanel();
        }
        return editPanelGrid;
    }
    
    public void MarcaBean.setEditPanelGrid(HtmlPanelGrid editPanelGrid) {
        this.editPanelGrid = editPanelGrid;
    }
    
    public HtmlPanelGrid MarcaBean.getViewPanelGrid() {
        return populateViewPanel();
    }
    
    public void MarcaBean.setViewPanelGrid(HtmlPanelGrid viewPanelGrid) {
        this.viewPanelGrid = viewPanelGrid;
    }
    
    public HtmlPanelGrid MarcaBean.populateCreatePanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel nomeCreateOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        nomeCreateOutput.setFor("nomeCreateInput");
        nomeCreateOutput.setId("nomeCreateOutput");
        nomeCreateOutput.setValue("Nome:");
        htmlPanelGrid.getChildren().add(nomeCreateOutput);
        
        InputText nomeCreateInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        nomeCreateInput.setId("nomeCreateInput");
        nomeCreateInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{marcaBean.marca.nome}", String.class));
        nomeCreateInput.setRequired(true);
        htmlPanelGrid.getChildren().add(nomeCreateInput);
        
        Message nomeCreateInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        nomeCreateInputMessage.setId("nomeCreateInputMessage");
        nomeCreateInputMessage.setFor("nomeCreateInput");
        nomeCreateInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(nomeCreateInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid MarcaBean.populateEditPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        OutputLabel nomeEditOutput = (OutputLabel) application.createComponent(OutputLabel.COMPONENT_TYPE);
        nomeEditOutput.setFor("nomeEditInput");
        nomeEditOutput.setId("nomeEditOutput");
        nomeEditOutput.setValue("Nome:");
        htmlPanelGrid.getChildren().add(nomeEditOutput);
        
        InputText nomeEditInput = (InputText) application.createComponent(InputText.COMPONENT_TYPE);
        nomeEditInput.setId("nomeEditInput");
        nomeEditInput.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{marcaBean.marca.nome}", String.class));
        nomeEditInput.setRequired(true);
        htmlPanelGrid.getChildren().add(nomeEditInput);
        
        Message nomeEditInputMessage = (Message) application.createComponent(Message.COMPONENT_TYPE);
        nomeEditInputMessage.setId("nomeEditInputMessage");
        nomeEditInputMessage.setFor("nomeEditInput");
        nomeEditInputMessage.setDisplay("icon");
        htmlPanelGrid.getChildren().add(nomeEditInputMessage);
        
        return htmlPanelGrid;
    }
    
    public HtmlPanelGrid MarcaBean.populateViewPanel() {
        FacesContext facesContext = FacesContext.getCurrentInstance();
        javax.faces.application.Application application = facesContext.getApplication();
        ExpressionFactory expressionFactory = application.getExpressionFactory();
        ELContext elContext = facesContext.getELContext();
        
        HtmlPanelGrid htmlPanelGrid = (HtmlPanelGrid) application.createComponent(HtmlPanelGrid.COMPONENT_TYPE);
        
        HtmlOutputText nomeLabel = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        nomeLabel.setId("nomeLabel");
        nomeLabel.setValue("Nome:");
        htmlPanelGrid.getChildren().add(nomeLabel);
        
        HtmlOutputText nomeValue = (HtmlOutputText) application.createComponent(HtmlOutputText.COMPONENT_TYPE);
        nomeValue.setId("nomeValue");
        nomeValue.setValueExpression("value", expressionFactory.createValueExpression(elContext, "#{marcaBean.marca.nome}", String.class));
        htmlPanelGrid.getChildren().add(nomeValue);
        
        return htmlPanelGrid;
    }
    
    public Marca MarcaBean.getMarca() {
        if (marca == null) {
            marca = new Marca();
        }
        return marca;
    }
    
    public void MarcaBean.setMarca(Marca marca) {
        this.marca = marca;
    }
    
    public String MarcaBean.onEdit() {
        return null;
    }
    
    public boolean MarcaBean.isCreateDialogVisible() {
        return createDialogVisible;
    }
    
    public void MarcaBean.setCreateDialogVisible(boolean createDialogVisible) {
        this.createDialogVisible = createDialogVisible;
    }
    
    public String MarcaBean.displayList() {
        createDialogVisible = false;
        findAllMarcas();
        return "marca";
    }
    
    public String MarcaBean.displayCreateDialog() {
        marca = new Marca();
        createDialogVisible = true;
        return "marca";
    }
    
    public String MarcaBean.persist() {
        String message = "";
        if (marca.getId() != null) {
            marca.merge();
            message = "message_successfully_updated";
        } else {
            marca.persist();
            message = "message_successfully_created";
        }
        RequestContext context = RequestContext.getCurrentInstance();
        context.execute("createDialogWidget.hide()");
        context.execute("editDialogWidget.hide()");
        
        FacesMessage facesMessage = MessageFactory.getMessage(message, "Marca");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllMarcas();
    }
    
    public String MarcaBean.delete() {
        marca.remove();
        FacesMessage facesMessage = MessageFactory.getMessage("message_successfully_deleted", "Marca");
        FacesContext.getCurrentInstance().addMessage(null, facesMessage);
        reset();
        return findAllMarcas();
    }
    
    public void MarcaBean.reset() {
        marca = null;
        createDialogVisible = false;
    }
    
    public void MarcaBean.handleDialogClose(CloseEvent event) {
        reset();
    }
    
}
